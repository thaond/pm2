<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="pm" default="all">


    <property file="build.properties"/>
    <property file="pm.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
   <property name="skip.tests" value="true"/>
    -->

    <!-- Compiler options -->

    <property name="db-jar-file" value="${ant.project.name}-db.jar"/>
    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.sbas/**"/>
        <exclude name="**/.IJI.*/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.GIF"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin.1.6" value="${jdk.home.1.6}/bin"/>
    <path id="jdk.classpath.1.6">
        <fileset dir="${jdk.home.1.6}">
            <include name="jre/lib/charsets.jar"/>
            <include name="jre/lib/deploy.jar"/>
            <include name="jre/lib/javaws.jar"/>
            <include name="jre/lib/jce.jar"/>
            <include name="jre/lib/jsse.jar"/>
            <include name="jre/lib/management-agent.jar"/>
            <include name="jre/lib/plugin.jar"/>
            <include name="jre/lib/resources.jar"/>
            <include name="jre/lib/rt.jar"/>
            <include name="jre/lib/ext/dnsns.jar"/>
            <include name="jre/lib/ext/localedata.jar"/>
            <include name="jre/lib/ext/sunjce_provider.jar"/>
            <include name="jre/lib/ext/sunmscapi.jar"/>
            <include name="jre/lib/ext/sunpkcs11.jar"/>
        </fileset>
    </path>

    <property name="project.jdk.home" value="${jdk.home.1.6}"/>
    <property name="project.jdk.bin" value="${jdk.bin.1.6}"/>
    <property name="project.jdk.classpath" value="jdk.classpath.1.6"/>


    <!-- Project Libraries -->


    <!-- Application Server Libraries -->

    <!-- Modules -->


    <!-- Module PM -->

    <dirname property="module.pm.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.pm" value="${jdk.home.1.6}"/>
    <property name="module.jdk.bin.pm" value="${jdk.bin.1.6}"/>
    <property name="module.jdk.classpath.pm" value="jdk.classpath.1.6"/>

    <property name="compiler.args.pm" value="${compiler.args}"/>

    <property name="pm.output.dir" value="${module.pm.basedir}/classes"/>
    <property name="pm.testoutput.dir" value="${module.pm.basedir}/testclasses"/>

    <path id="pm.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="pm.module.classpath">
        <path refid="${module.jdk.classpath.pm}"/>
        <fileset dir="${module.pm.basedir}/lib" includes="*.jar"/>
        <fileset dir="resources"/>
    </path>

    <path id="pm.test.classpath">
        <path refid="pm.module.classpath"/>
        <pathelement location="${pm.output.dir}"/>
    </path>


    <patternset id="excluded.from.module.pm">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.pm">
        <patternset refid="excluded.from.module.pm"/>
    </patternset>

    <path id="pm.module.sourcepath">
        <dirset dir="${module.pm.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="pm.module.test.sourcepath">
        <dirset dir="${module.pm.basedir}">
            <include name="externalTest"/>
            <include name="test"/>
        </dirset>
    </path>


    <target name="compile.module.pm" depends="compile.module.pm.production,compile.module.pm.tests"
            description="Compile module PM"/>

    <target name="compile.module.pm.production" description="Compile module PM; production classes">
        <mkdir dir="${pm.output.dir}"/>
        <javac destdir="${pm.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.pm}/javac">
            <compilerarg line="${compiler.args.pm}"/>
            <bootclasspath refid="pm.module.bootclasspath"/>
            <classpath refid="pm.module.classpath"/>
            <src refid="pm.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.pm"/>
        </javac>

        <copy todir="${pm.output.dir}">
            <fileset dir="${module.pm.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.pm.tests" depends="compile.module.pm.production"
            description="compile module PM; test classes" unless="skip.tests">
        <mkdir dir="${pm.testoutput.dir}"/>
        <javac destdir="${pm.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.pm}/javac">
            <compilerarg line="${compiler.args.pm}"/>
            <classpath refid="pm.module.classpath"/>
            <classpath location="${pm.output.dir}"/>
            <src refid="pm.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.pm"/>
        </javac>

        <copy todir="${pm.testoutput.dir}">
            <fileset dir="${module.pm.basedir}/externalTest">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
            <fileset dir="${module.pm.basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <property name="pm.test.report.dir" value="reports"/>

    <target name="clean.module.pm" description="cleanup module">
        <delete dir="${pm.output.dir}"/>
        <delete dir="${pm.testoutput.dir}"/>
        <delete dir="${pm.test.report.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.pm" description="cleanup all"/>

    <target name="jar" depends="init, clean, compile.module.pm.production" description="jar">
        <jar file="${ant.project.name}.jar" basedir="${pm.output.dir}" includes="**"/>
    </target>

    <target name="jarDB" depends="init, clean, compile.module.pm.production" description="jar">
        <jar file="${db-jar-file}" basedir="${pm.output.dir}" includes="pm/dao/derby/function/**"/>
    </target>

    <target name="deployDB" depends="jarDB" description="deploys">
        <copy overwrite="true" failonerror="yes" todir="${derby.location}">
            <fileset file="${db-jar-file}"/>
        </copy>
    </target>

    <target name="deploy" depends="jar" description="deploys">
        <copy overwrite="true" failonerror="yes" todir="${production.location}">
            <fileset file="${ant.project.name}.jar"/>
            <fileset file="resources/SQLMapConfiguration.xml"/>
            <fileset file="db/create-db.sql"/>
            <fileset file="db/cleanUpTransactions.sql"/>
            <fileset dir="${module.pm.basedir}/lib" includes="*.jar" excludes="jmock*.jar, junit*.jar, dbunit*.jar"/>
        </copy>
    </target>
    <!---->
    <target name="check-failure" if="build.failed">
        <fail message="Build failed"/>
    </target>

    <path id="dbdeploy.classpath">
        <fileset dir="lib">
            <include name="dbdeploy-ant-*.jar"/>
            <include name="derby*.jar"/>
        </fileset>

    </path>

    <taskdef name="dbdeploy" classname="com.dbdeploy.AntTarget" classpathref="dbdeploy.classpath"/>

    <target name="start-db" depends="compile.module.pm.production">
        <derby action="start" fork="true"/>
    </target>

    <target name="stop-db">
        <derby action="stop" fork="false"/>
    </target>

    <macrodef name="derby">
        <attribute name="action"/>
        <attribute name="fork"/>
        <sequential>
            <java classpathref="pm.test.classpath" classname="org.apache.derby.drda.NetworkServerControl"
                  fork="@{fork}">
                <arg value="@{action}"/>
                <env key="DERBY_HOME" value="db"/>
            </java>
        </sequential>
    </macrodef>
    <target name="create-db" depends="compile.module.pm.production">
        <sql
                classpathref="dbdeploy.classpath"
                driver="${DB_DRIVER}"
                url="${DB_URL}"
                userid="${DB_USER}"
                password="${DB_PASSWORD}"
                src="db/create-db.sql"
                onerror="continue"
                />
    </target>

    <target name="update-db" depends="compile.module.pm.production">
        <dbdeploy driver="${DB_DRIVER}" url="${DB_URL}"
                  userid="${DB_USER}"
                  password="${DB_PASSWORD}"
                  dir="db"/>

    </target>

    <target name="test" depends="clean, compile.module.pm.tests, create-db, update-db">
        <mkdir dir="${pm.test.report.dir}"/>
        <junit jvm="${jdk.home.1.6}/bin/java" fork="true" forkmode="once" failureproperty="build.failed"
               errorproperty="build.failed">
            <classpath refid="pm.test.classpath"/>
            <classpath location="${pm.testoutput.dir}"/>
            <classpath location="test/data"/>
            <classpath location="."/>
            <batchtest todir="${pm.test.report.dir}">
                <formatter type="xml"/>
                <fileset dir="test" includes="**/*Test.*" excludes="**/*External*.*, **/LoadTransDataFunctionalTest.*"/>
            </batchtest>
        </junit>

        <junit jvm="${jdk.home.1.6}/bin/java" fork="true" forkmode="once" failureproperty="build.failed"
               errorproperty="build.failed">
            <classpath refid="pm.test.classpath"/>
            <classpath location="${pm.testoutput.dir}"/>
            <classpath location="test/data"/>
            <classpath location="."/>
            <batchtest todir="${pm.test.report.dir}">
                <formatter type="xml"/>
                <fileset dir="test" includes="**/LoadTransDataFunctionalTest.*"/>
            </batchtest>
        </junit>

        <!--<junitreport todir="${pm.test.report.dir}">-->
        <!--<fileset dir="${pm.test.report.dir}">-->
        <!--<include name="TEST-*.xml"/>-->
        <!--</fileset>-->
        <!--<report format="frames" todir="${pm.test.report.dir}/html"/>-->
        <!--</junitreport>-->
        <antcall target="check-failure"/>
    </target>

    <target name="copy.properties">
        <copyfile src="resources/pm.properties.hudson" dest="pm.properties" forceoverwrite="true"/>
        <copyfile src="resources/SQLMapConfiguration.xml" dest="SQLMapConfiguration.xml" forceoverwrite="true"/>
    </target>

    <target name="all" depends="init, clean, compile.module.pm" description="build all"/>
    <target name="hudson" depends="copy.properties, start-db, test, stop-db" description="hudson"/>

</project>